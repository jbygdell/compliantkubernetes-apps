apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: curl-jq
  name: curl-jq
spec:
  replicas: 1
  selector:
    matchLabels:
      app: curl-jq
  template:
    metadata:
      labels:
        app: curl-jq
    spec:
      serviceAccountName: curl-jq
      containers:
      - image: elastisys/curl-jq
        name: curl-jq
        command:
        - /bin/sh
        - -c
        - |
          APISERVER=https://kubernetes.default.svc
          SERVICEACCOUNT=/var/run/secrets/kubernetes.io/serviceaccount
          NAMESPACE=$(cat ${SERVICEACCOUNT}/namespace)
          TOKEN=$(cat ${SERVICEACCOUNT}/token)
          CACERT=${SERVICEACCOUNT}/ca.crt
          while true; do
            curl --cacert ${CACERT} --header "Authorization: Bearer ${TOKEN}" -X GET ${APISERVER}/apis/aquasecurity.github.io/v1alpha1/vulnerabilityreports > /textfile-collector/tmp-reports.json
            cat /textfile-collector/tmp-reports.json | jq '.items[] | {name: .metadata.name, namespace: .metadata.namespace, severity: "low", result: .report.summary.lowCount}' -c | sed 's/,"result":\([0-9]\+\)}/} \1/' | sed 's/^/image_vulnerability/' | sed 's/"\([a-z]\+\)":/\1=/g' > /textfile-collector/tmp-metrics
            cat /textfile-collector/tmp-reports.json | jq '.items[] | {name: .metadata.name, namespace: .metadata.namespace, severity: "medium", result: .report.summary.mediumCount}' -c | sed 's/,"result":\([0-9]\+\)}/} \1/' | sed 's/^/image_vulnerability/' | sed 's/"\([a-z]\+\)":/\1=/g' >> /textfile-collector/tmp-metrics
            cat /textfile-collector/tmp-reports.json | jq '.items[] | {name: .metadata.name, namespace: .metadata.namespace, severity: "high", result: .report.summary.highCount}' -c | sed 's/,"result":\([0-9]\+\)}/} \1/' | sed 's/^/image_vulnerability/' | sed 's/"\([a-z]\+\)":/\1=/g' >> /textfile-collector/tmp-metrics
            cat /textfile-collector/tmp-reports.json | jq '.items[] | {name: .metadata.name, namespace: .metadata.namespace, severity: "critical", result: .report.summary.criticalCount}' -c | sed 's/,"result":\([0-9]\+\)}/} \1/' | sed 's/^/image_vulnerability/' | sed 's/"\([a-z]\+\)":/\1=/g' >> /textfile-collector/tmp-metrics
            cat /textfile-collector/tmp-reports.json | jq '.items[] | {name: .metadata.name, namespace: .metadata.namespace, severity: "unknown", result: .report.summary.unknownCount}' -c | sed 's/,"result":\([0-9]\+\)}/} \1/' | sed 's/^/image_vulnerability/' | sed 's/"\([a-z]\+\)":/\1=/g' >> /textfile-collector/tmp-metrics
            cat /textfile-collector/tmp-metrics > /textfile-collector/vulnerabilities.prom
            cat /textfile-collector/tmp-metrics
            sleep 10
          done
        volumeMounts:
          - name: textfile-collector-dir
            mountPath: /textfile-collector
      - name: influxdb-node-exporter
        image: prom/node-exporter:v1.0.1
        args: ["--collector.textfile.directory=/textfile-collector", "--no-collector.arp", "--no-collector.bcache", "--no-collector.bonding", "--no-collector.conntrack", "--no-collector.cpu", "--no-collector.cpufreq", "--no-collector.diskstats", "--no-collector.edac", "--no-collector.entropy", "--no-collector.filefd", "--no-collector.filesystem", "--no-collector.hwmon", "--no-collector.infiniband", "--no-collector.ipvs", "--no-collector.loadavg", "--no-collector.mdadm", "--no-collector.meminfo", "--no-collector.netclass", "--no-collector.netdev", "--no-collector.nfs", "--no-collector.nfsd", "--no-collector.netstat", "--no-collector.pressure", "--no-collector.stat", "--no-collector.sockstat", "--no-collector.timex", "--no-collector.vmstat", "--no-collector.xfs", "--no-collector.zfs"]
          # enabled collectors: textfile, time, uname
        ports:
        - containerPort: 9100
          name: metrics
        volumeMounts:
          - name: textfile-collector-dir
            mountPath: /textfile-collector
      volumes:
      - name: textfile-collector-dir
        emptyDir: {}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: curl-jq
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: curl-jq
rules:
  - apiGroups: ["aquasecurity.github.io"]
    resources: ["vulnerabilityreports"]
    verbs: ["get", "list", "watch"]
  - apiGroups:
    - extensions
    resourceNames:
    - privileged
    resources:
    - podsecuritypolicies
    verbs:
    - use
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: curl-jq
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: curl-jq
subjects:
  - name: curl-jq
    namespace: default
    kind: ServiceAccount
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  labels:
    app: curl-jq
  name: curl-jq
spec:
  endpoints:
  - port: metrics
  selector:
    matchLabels:
      app: curl-jq
---
apiVersion: v1
kind: Service
metadata:
  labels:
      app: curl-jq
  name: curl-jq
spec:
  ports:
  - port: 9100
    name: metrics
    protocol: TCP
    targetPort: 9100
  selector:
    app: curl-jq
  sessionAffinity: None
  type: ClusterIP
